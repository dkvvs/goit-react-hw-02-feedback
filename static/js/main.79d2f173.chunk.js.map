{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","index","type","className","s","button","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","list","item","Section","title","children","box","App","state","Object","keys","handleFeedback","setState","prevState","countTotalFeedback","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iBCAzDD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,IAAM,uB,oBCAvDD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,qKCqBbC,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACjB,wBAEEC,KAAK,SACLC,UAAWC,IAAEC,OACbC,QAAS,kBAAMR,EAAgBE,IAJjC,SAMGA,GALIC,O,iBCGIM,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGL,UAAWC,IAAEI,QAAhB,SAA0BA,K,gBC2BjDC,EA1BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACGD,EAAQ,EACP,qBAAIV,UAAWC,IAAEW,KAAjB,UACE,qBAAIZ,UAAWC,IAAEY,KAAjB,mBAA8BN,KAC9B,qBAAIP,UAAWC,IAAEY,KAAjB,sBAAiCL,KACjC,qBAAIR,UAAWC,IAAEY,KAAjB,kBAA6BJ,KAC7B,qBAAIT,UAAWC,IAAEY,KAAjB,oBAA+BH,KAC/B,qBAAIV,UAAWC,IAAEY,KAAjB,iCAA4CF,EAA5C,UAGF,cAAC,EAAD,CAAcN,QAAQ,yB,gBCCfS,EAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,kCACE,sBAAKhB,UAAWC,IAAEgB,IAAlB,UACE,oBAAIjB,UAAWC,IAAEc,MAAjB,SAAyBA,IACxBC,QC2CQE,E,4MA7CbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPf,QAAU0B,OAAOC,KAAK,EAAKF,O,EAE3BG,eAAiB,SAAAzB,GACf,EAAK0B,UAAS,SAAAC,GAAS,sBAAQ3B,EAAS2B,EAAU3B,GAAU,O,EAG9D4B,mBAAqB,kBACnB,EAAK/B,QAAQgC,QAAO,SAACC,EAAK9B,GAAN,OAAiB8B,EAAM,EAAKR,MAAMtB,KAAS,I,EAEjE+B,gCAAkC,WAChC,IAAMlB,EAAQ,EAAKe,qBACXlB,EAAS,EAAKY,MAAdZ,KACR,OAAOG,EAAQmB,KAAKC,MAAOvB,EAAOG,EAAS,KAAO,G,uDAG1C,IAAD,EACwBqB,KAAKZ,MAA5BZ,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACErB,QAASqC,KAAKrC,QACdC,gBAAiBoC,KAAKT,mBAG1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACE,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,KAAKN,qBACZd,mBAAoBoB,KAAKH,6C,GAtCnBI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79d2f173.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1mtU1\",\"item\":\"Statistics_item__D7tRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__r75gg\",\"box\":\"Section_box__2YJSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1X9oI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1TonD\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option, index) => (\n    <button\n      key={index}\n      type=\"button\"\n      className={s.button}\n      onClick={() => onLeaveFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../../components/Notification/Notification.module.css';\n\nconst Notification = ({ message }) => <p className={s.message}>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../../components/Notification/Notification';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      {total > 0 ? (\n        <ul className={s.list}>\n          <li className={s.item}>Good: {good}</li>\n          <li className={s.item}>Neutral: {neutral}</li>\n          <li className={s.item}>Bad: {bad}</li>\n          <li className={s.item}>Total: {total}</li>\n          <li className={s.item}>PositivePercentage: {positivePercentage}%</li>\n        </ul>\n      ) : (\n        <Notification message=\"No feedback given\"></Notification>\n      )}\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <div className={s.box}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  options = Object.keys(this.state);\n\n  handleFeedback = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback = () =>\n    this.options.reduce((acc, option) => acc + this.state[option], 0);\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.options}\n            onLeaveFeedback={this.handleFeedback}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          ></Statistics>\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}