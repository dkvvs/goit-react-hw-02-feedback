{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","index","type","className","s","button","onClick","propTipes","PropTipes","arrayOf","string","isRequired","func","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","list","item","number","Section","title","children","box","node","App","state","Object","keys","handleFeedback","setState","prevState","countTotalFeedback","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bd703b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1X9oI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1TonD\"};","import React from 'react';\r\nimport PropTipes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((option, index) => (\r\n    <button\r\n      key={index}\r\n      type=\"button\"\r\n      className={s.button}\r\n      onClick={() => onLeaveFeedback(option)}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTipes = {\r\n  options: PropTipes.arrayOf(PropTipes.string.isRequired),\r\n  onLeaveFeedback: PropTipes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTipes from 'prop-types';\r\nimport s from '../../components/Notification/Notification.module.css';\r\n\r\nconst Notification = ({ message }) => <p className={s.message}>{message}</p>;\r\n\r\nNotification.propTipes = {\r\n  message: PropTipes.string.isRequired,\r\n};\r\n\r\nNotification.propTipes = {\r\n  message: PropTipes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTipes from 'prop-types';\r\nimport Notification from '../../components/Notification/Notification';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      {total > 0 ? (\r\n        <ul className={s.list}>\r\n          <li className={s.item}>Good: {good}</li>\r\n          <li className={s.item}>Neutral: {neutral}</li>\r\n          <li className={s.item}>Bad: {bad}</li>\r\n          <li className={s.item}>Total: {total}</li>\r\n          <li className={s.item}>PositivePercentage: {positivePercentage}%</li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"No feedback given\"></Notification>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTipes = {\r\n  good: PropTipes.number.isRequired,\r\n  neutral: PropTipes.number.isRequired,\r\n  bad: PropTipes.number.isRequired,\r\n  total: PropTipes.number.isRequired,\r\n  positivePercentage: PropTipes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTipes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <div className={s.box}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nSection.propTipes = {\r\n  title: PropTipes.string.isRequired,\r\n  children: PropTipes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  options = Object.keys(this.state);\n\n  handleFeedback = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback = () =>\n    this.options.reduce((acc, option) => acc + this.state[option], 0);\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.options}\n            onLeaveFeedback={this.handleFeedback}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          ></Statistics>\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1mtU1\",\"item\":\"Statistics_item__D7tRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__r75gg\",\"box\":\"Section_box__2YJSl\"};"],"sourceRoot":""}